<krpano>
  <!-- Version 0.21 Design -->
  <skin_settings title="false"
                 thumbs_width="100"
                 thumbs_text="true"
                 deeplinking="true"
                 design_bgcolor="0x000000"
                 design_bgalpha="0.9"
                 design_bgroundedge="6"
                 design_skin_images="%VIEWER%/artexb/skin/artexb_skin_white.svg"
                 design_skin_artexb_images="%VIEWER%/artexb/skin/artexb_skin_custom.svg"
                 design_skin_artexb_images_white="%VIEWER%/artexb/skin/artexb_skin_custom_white.svg"
                 maps="false" gyro="false" webvr="false" loadingtext=""
                 design_thumbborder_bgroundedge="6"
                 controlbar_offset="30"
                 design_thumbborder_bgborder="2 0xFFFFFF 1.0"
                 design_inner_shadow="0 0 20 0 0x000000 0.8 inset"
                 thumbs_scrollindicator="true"
                 controlbar_height="46"
                 design_thumbborder_padding="-2"
                 />

  <!-- skin_base - the base skin image -->
  <style name="skin_base"   url="calc:skin_settings.design_skin_images" />
  <style name="skin_custom" url="calc:skin_settings.design_skin_artexb_images" />
  <style name="skin_custom_white" url="calc:skin_settings.design_skin_artexb_images_white" />

  <style name="poly_hotspot_style"
         alpha="0"/>

  <events onxmlcomplete="jscall(
     document.getElementById('pano').style.display = 'block';
     document.getElementById('loading_kr').style.display='none';
      );" />

  <action name="skin_hotspotstyle_click" scope="local">
    if(isvalue(caller.linkedscene),
      copy(hs_linkedscene, caller.linkedscene);
      if(caller.linkedscene_lookat, txtsplit(caller.linkedscene_lookat, ',', hs_lookat_h, hs_lookat_v, hs_lookat_fov); );
      set(caller.enabled, false);
      skin_hidetooltips();
      tween(caller.depth|caller.alpha, 4000|0.0, 0.5, default,
        skin_loadscene(get(hs_linkedscene), get(skin_settings.loadscene_blend));
        if(hs_lookat_h !== null, skin_lookat(get(hs_lookat_h), get(hs_lookat_v), get(hs_lookat_fov)); );
        skin_updatescroll();
      );
    );
  </action>

  <action name="popup_intro">
    open_html_box('popup_intro_cn', 'popup_intro_en');
  </action>

  <action name="qr_button_click">
    if(layer["lagnuage_text"].html === 'EN',
    popup('html', get(data[qr_data_cn].content), 50, 90, 130, 146, 0x000000, '0,0,0,0.9', false, "leftbottom", true, true, false, get(data[qr_data_cn].roundedge), '7px 7px 7px 7px', '7px 7px 7px 7px', get(data[qr_data_cn].popurl)),
    popup('html', get(data[qr_data_en].content), 50, 90, 130, 146, 0x000000, '0,0,0,0.9', false, "leftbottom", true, true, false, get(data[qr_data_en].roundedge), '7px 7px 7px 7px', '7px 7px 7px 7px', get(data[qr_data_en].popurl)) );
  </action>

  <!-- 浏览｜喜欢 begin -->
  <!--当统计可用-->
  <action name="update_views_likes">
    <!-- trace('update_views_likes'); -->
    <!--显示效果-->
    tween(layer[count_btn].alpha,1); tween(layer[praise_btn].alpha,1); set(layer[count_btn].enabled,false); set(layer[praise_btn].enabled,true);
    <!--显示数据-->
    txtadd(layer[count_btn_number].html,get(plugin[views_and_likes].views_count), " 浏 览"); txtadd(layer[praise_btn_number].html,get(plugin[views_and_likes].likes_count), " 喜 欢");
    <!--如果可点赞点赞按钮可接收事件，且为半透明 否则不可接收事件 ，且透明度为1-->
    if(plugin[views_and_likes].already_like == true, set(layer[praise_btn].crop,64|448|64|64); set(layer[praise_btn].enabled,false); , set(layer[praise_btn].crop,0|448|64|64); set(layer[praise_btn].enabled,true); );
  </action>

  <!--当访问统计不可用-->
  <action name="onunavailable">
    tween(layer[count_btn].alpha,0.5); tween(layer[praise_btn].alpha,0.5); set(layer[count_btn].enabled,false); set(layer[praise_btn].enabled,false);
  </action>
  <!-- 浏览｜喜欢 end -->

  <!-- override actions -->
  <action name="skin_arrange_buttons" scope="local">
    <!-- calc(show_selbuttons, scene.count GT 1); -->
    set(show_selbuttons, 0); calc(show_thumbutton, skin_settings.thumbs == true); calc(show_mapbutton, skin_settings.maps == true); calc(show_gyrobutton, plugin[skin_gyro].isavailable == true AND (view.vlookatrange == 180 OR global.lpinfo.scene ===
    xml.scene)); calc(show_vrbutton, webvr.isavailable == true);

    <!-- calc(show_fsbutton, device.fullscreensupport == true); -->
    set(show_fsbutton, 0); set(lpos,6); set(cpos,0); if(show_gyrobutton, dec(cpos,20)); if(show_vrbutton OR plugin[webvr].mobilevr_fake_support == true, dec(cpos,24)); set(rpos,6);

    <!-- calc(show_dirbuttons, !device.mobile AND ((area.pixelwidth + 2*cpos) GT 520) ); -->
    set(show_dirbuttons, 0); copy(layer[skin_btn_navi].visible, show_dirbuttons); copy(layer[skin_btn_prev].visible, show_selbuttons); copy(layer[skin_btn_next].visible, show_selbuttons); if(show_selbuttons, inc(lpos,44); inc(rpos,44); );
    copy(layer[skin_btn_thumbs].visible, show_thumbutton); copy(layer[skin_btn_thumbs].x, lpos); if(show_thumbutton, inc(lpos,40)); copy(layer[skin_btn_map].visible, show_mapbutton); copy(layer[skin_btn_map].x, lpos); if(show_mapbutton, inc(lpos,40));
    if(show_dirbuttons, copy(layer[skin_btn_navi].x, cpos); inc(cpos,140); set(layer[skin_btn_gyro].align, center); copy(layer[skin_btn_gyro].visible, show_gyrobutton); copy(layer[skin_btn_gyro].x, cpos); if(show_gyrobutton, inc(cpos,48));
    set(layer[skin_btn_vr].align, center); copy(layer[skin_btn_vr].visible, show_vrbutton); copy(layer[skin_btn_vr].x, cpos); if(show_vrbutton, inc(cpos,80)); , set(layer[skin_btn_gyro].align, left); copy(layer[skin_btn_gyro].visible, show_gyrobutton);
    copy(layer[skin_btn_gyro].x, lpos); if(show_gyrobutton, inc(lpos,40)); set(layer[skin_btn_vr].align, left); copy(layer[skin_btn_vr].visible, show_vrbutton); copy(layer[skin_btn_vr].x, lpos); if(show_vrbutton, inc(lpos,80)); );
    copy(layer[skin_btn_hide].x, rpos); inc(rpos,40); copy(layer[skin_btn_fs].visible, show_fsbutton); copy(layer[skin_btn_fs].x, rpos); if(show_fsbutton, inc(rpos,40));
  </action>

  <action name="skin_hideskin" scope="local" args="hidetimemode">
    calc(hidetime, hidetimemode == 'instant' ? 0.0 : 0.5);

    callwith(layer[skin_scroll_window],   skin_calc_opened_closed() );
    callwith(layer[skin_splitter_bottom], skin_calc_opened_closed() );
    callwith(layer[skin_control_bar],     skin_calc_opened_closed() );

    if(layer[skin_map].state    != 'closed', skin_showmap(false);    if(hidetime GT 0, wait(0.40)); );
    if(layer[skin_thumbs].state != 'closed', skin_showthumbs(false); if(hidetime GT 0, wait(0.25)); );

    tween(layer[skin_scroll_window].y,   get(layer[skin_scroll_window  ].y_closed), get(hidetime));
    tween(layer[skin_splitter_bottom].y, get(layer[skin_splitter_bottom].y_closed), get(hidetime));
    tween(layer[skin_control_bar].y,     get(layer[skin_control_bar    ].y_closed), get(hidetime));

    set(layer[skin_btn_prev_fs].enabled, true);
    set(layer[skin_btn_next_fs].enabled, true);
    tween(layer[skin_btn_prev_fs].x|layer[skin_btn_prev_fs].alpha, 0|0.6, get(hidetime));
    tween(layer[skin_btn_next_fs].x|layer[skin_btn_next_fs].alpha, 0|0.6, get(hidetime));

    if(layer[skin_logo], tween(layer[skin_logo].alpha, 0.0, 0.5, default, set(layer[skin_logo].visible,false)); );
    if(layer[praise_btn], tween(layer[praise_btn].alpha, 0.0, 0.5, default, set(layer[praise_btn].visible,false)); );
    if(layer[lagnuage_button], tween(layer[lagnuage_button].alpha, 0.0, 0.5, default, set(layer[lagnuage_button].visible,false)); );

    stopdelayedcall(skin_btn_show_alpha);
    set(layer[skin_btn_show].visible, true);
    delayedcall(skin_btn_show_alpha, get(hidetime), tween(layer[skin_btn_show].alpha, 0.6, 0.25); );
  </action>


  <action name="skin_showskin">
    tween(layer[skin_scroll_window  ].y, get(layer[skin_scroll_window  ].y_opened));
    tween(layer[skin_splitter_bottom].y, get(layer[skin_splitter_bottom].y_opened));
    tween(layer[skin_control_bar    ].y, get(layer[skin_control_bar    ].y_opened));

    set(layer[skin_btn_prev_fs].enabled, false);
    set(layer[skin_btn_next_fs].enabled, false);
    tween(layer[skin_btn_prev_fs].x|layer[skin_btn_prev_fs].alpha, -50|0.0);
    tween(layer[skin_btn_next_fs].x|layer[skin_btn_next_fs].alpha, -50|0.0);

    if(layer[skin_logo], set(layer[skin_logo].visible,true); tween(layer[skin_logo].alpha, 1.0); );
    if(layer[praise_btn], set(layer[praise_btn].visible,true); tween(layer[praise_btn].alpha, 1.0); );
    if(layer[lagnuage_button], set(layer[lagnuage_button].visible,true); tween(layer[lagnuage_button].alpha, 1.0); );

    stopdelayedcall(skin_btn_show_alpha);
    set(layer[skin_btn_show].visible, false);
    delayedcall(skin_btn_show_alpha, 0.25, tween(layer[skin_btn_show].alpha, 0.0, 0.0); );
  </action>

  <!-- context menu - http://krpano.com/docu/xml/#contextmenu -->
  <contextmenu>
    <item name="kr" caption="KRPANO"     />
    <item name="fs" caption="FULLSCREEN" />

    <item name="nv" caption="Normal View"        onclick="skin_view_normal();"        showif="view.vlookatrange == 180" separator="true"      />
    <item name="pv" caption="Pannini View"       onclick="skin_view_pannini();"       showif="view.vlookatrange == 180" devices="flash|webgl" />
    <item name="av" caption="Architectural View" onclick="skin_view_architectural();" showif="view.vlookatrange == 180"  />

    <item name="logo"   caption="© 2020 ARTEXB.COM"  onclick="openurl('http://artexb.com')"   separator="true"     />

  </contextmenu>

  <!-- background layer -->
  <layer name="background" keep="true" type="container" align="center" width="100%" height="100%">

    <!-- logo -->
    <layer name="skin_logo" url="%VIEWER%/artexb/skin/logo_white.svg" scale="0.3" scale.mobile="0.17" width="240" height="240" keep="true" enabled="true" align="lefttop" x="14" y="12" onclick="skin_loadscene(get(scene[0].name),get(skin_settings.loadscene_blend));"/>

    <!-- views likes button -->
    <plugin name="views_and_likes"
            url="%VIEWER%/artexb/plugins/views_likes.js"
            keep="true"
            onloaded="update_views();"
            align="righttop"
            post_id="14"
            api="https://hello.artexb.com"
            />
    <layer name="praise_btn" style="skin_custom_white|skin_glow" keep="true" visible="true" y="16" x="14" scale="0.5" align="righttop" vr="false" crop="0|448|64|64" onclick="plugin[views_and_likes].click_likes();">
      <layer name="count_btn_number" url="textfield.swf" align="right" y="-8" x="30" edge="right" css="text-align:right; color:#FFFFFF; font-family:Arial; font-size:11px;letter-spacing:0.5px;" vcenter="true" html="" backgroundalpha="0"/>
      <layer name="praise_btn_number" url="textfield.swf" align="right" y="7" x="30" edge="right" css="text-align:right; color:#FFFFFF; font-family:Arial; font-size:11px;letter-spacing:0.5px;" vcenter="true" html="" backgroundalpha="0"/>
    </layer>
    <!--赞-->

    <!-- a button to lagnuage -->
    <layer name="lagnuage_button" keep="true" type="container" align="righttop" x="32" y="56" alpha="1">
      <!-- <layer name="lagnuage_icon" style="skin_custom_white|skin_glow" align="centertop" x="0" y="0" scale="0.5" crop="64|640|64|64"/> -->
      <layer name="lagnuage_text_en" type="text" html="EN" align="center" x="4" y="26" css="color:#ffffff;font-size:14px;" bgalpha="0" alpha="0.5"/>
      <layer name="lagnuage_text_devider" type="text" html="|" align="center" x="-11" y="26" css="color:#ffffff;font-size:14px;" bgalpha="0"/>
      <layer name="lagnuage_text_cn" type="text" html="中" align="center" x="-23" y="26" css="color:#ffffff;font-size:14px;" bgalpha="0"/>
      <layer name="lagnuage_text" visible="false" type="text" html="EN" align="center" x="0" y="26" css="color:#ffffff;font-size:11px;" bgalpha="0" />
      <layer name="lagnuage_button_action" type="text" align="righttop" x="-16" y="0" width="50" height="50" alpha="0"/>
    </layer>
  </layer>

  <!-- skin layout -->
  <layer name="skin_layer">
    <layer name="skin_control_bar">
      <layer name="skin_control_bar_buttons">
        <layer name="skin_btn_thumbs" ondown="skin_showmap(false); skin_showthumbs();" />
        <layer name="skin_btn_intro" style="skin_custom_white|skin_glow" crop="0|384|64|64" align="left" x="50" y="0" scale="0.5" ondown="skin_showthumbs(false);popup_intro();"/>
        <layer name="skin_btn_qr" style="skin_custom_white|skin_glow" crop="0|320|64|64" align="left" x="90" y="0" scale="0.5" ondown="skin_showthumbs(false);qr_button_click();"/>

        <layer name="skin_btn_show" y="calc:skin_settings.controlbar_height - skin_settings.controlbar_offset_closed + 30" onhover="" onout="">
          <layer name="skin_btn_show_icon" style="skin_base" crop="64|448|64|64" scale="0.5" align="bottom" y="2" enabled="false" />
        </layer>
      </layer>
    </layer>

    <layer name="skin_loadingtext"
           zorder="100"
           type="container"
           width="64"
           height="64"
           scale="1"
           align="center"
           x="0"
           y="-5"
           html="get:skin_settings.loadingtext"
           visible="false"
           bg="false"
           enabled="false"
           css="calc:skin_settings.design_text_css + ' text-align:center; font-style:italic; font-size:22px;'"
           textshadow="get:skin_settings.design_text_shadow"
           >

     <layer name="lottie_loadingtext"
            type="container"
            width="100%"
            height="100%"
            keep="true"
            align="center"
            onloaded="load_lottie('lottie_loadingtext', 'artexb/plugins/animated_icon/27-loading.json');"
            />

    </layer>

  </layer>

  <layer name="skin_btn_prev_fs" onhover="" onout="" />
  <layer name="skin_btn_next_fs" onhover="" onout="" />



</krpano>
